[{"body":"","link":"https://thientoan0101.github.io/","section":"","tags":null,"title":""},{"body":"","link":"https://thientoan0101.github.io/categories/","section":"categories","tags":null,"title":"Categories"},{"body":"Thiết kế hệ thống cho 10k user qua góc nhìn của một newbie Chào mọi người, tuần rồi mình được anh mentor cho một bài tập: \u0026quot;Đề xuất thiết kế hệ thống cho trang blog với 10k users truy cập cùng lúc\u0026quot;. Hmmm. Làm kiểu gì bây giờ, vậy là mình bắt đầu tìm hiểu và cũng xin viết ra nhưng gì mình tìm được dưới đây 😊\nPhân tích  Trang web với 10 000 user thì như thế nào?\n→ Khá lớn, có thể bị chậm, lag. Nếu thiết kế không tốt có thể crash hệ thống. Tại sao lại xảy ra hiện tượng chậm, crash như trên?\n→ Vì nhiều người cùng truy cập sẽ có nhiều tác vụ, yêu cầu truy xuất, xử lý dẫn đến server không xử lý được. Ngoài ra, băng thông ít cũng dẫn đến việc truy cập bị hạn chế, chậm,... Tại sao server không xử lý được hoặc chậm?\n→ Có thể cấu hình server yếu, chỉ có một server, nhiều tác vụ xử lý lâu dẫn đến nhiều cái khác phải chờ, có thể do truy xuất database quá lớn, khoảng cách địa lý,....  Giải pháp Đối với các trang web lớn, việc thiết kế hệ thống sao có có tính mở rộng (scalability) là rất cần thiết.\nBài viết hơi dài, mình xin để thêm phần mục lục :((\nCác phương pháp  Vertical Scalling vs Horizontal Scalling Load Balancing Database Replication Catching CDNs Stateless Architecture Database Partitioning Tóm tắt  Để thiết kế được hệ thống như vậy, ta sẽ đi từ những bước cơ bản nhất: từ một vài user đến hàng ngàn user.\nGiai đoạn đầu tiên: 1 user Đây là lúc chúng ta đang thiết kế chỉ mình ta sử dụng. Sau khi xây dựng các file, data,... việc chúng ta cần chỉ là tìm một cái host để mà deploy trang web mà thôi. Hiện nay, các nhà cung cấp dịch vụ cloud (cloud provider) như AWS, Google Cloud sẽ giúp ta đơn giản hóa việc này rất nhiều mà không cần mua một cái server riêng làm gì. Bản chất các cloud provider này dành cho trang web của ta một ít tài nguyên trên máy ảo như CPU, RAM, SSD,... Và thế là trang web của ta hoạt động ngon lành. Tuy nhiên, cuộc đời không phải màu hồng, sẽ có lúc trang web của ta có nhiều người truy cập hơn, có thể là vài trăm thay vì vài chục như trước (con số tương đối). Vấn đề bắt đầu xuất hiện ở đây chính là sẽ có những lúc mà nhiều người thấy trang web chậm quá, đứng, treo,... Đấy là lúc ta cần nâng cấp hệ thống một xíu.\nGiai đoạn 2: 100 ~ 500 user Nguyên nhân đơn giản nhất ở đây chính là server của ta đã không còn đủ mạnh để phục vụ cùng lúc nhiều người nữa. Giống như một quán ăn chỉ với một anh đầu bếp, một vài người thì không sao nhưng vài chục người thì khách phải chờ lâu là hoàn toàn dễ hiểu. Server của ta cũng vậy, ban đầu ta chỉ cung cấp cho nó một lượng tài nguyên nhất định, ví dụ RAM 8Gb, CPU i7, ổ cứng HDD. Càng nhiều người dùng, các nhiều tác vụ, càng nhiều việc xử lý mà với đám CPU, RAM lèo tèo vậy thật là quá sức. Lúc này, ta sẽ làm một việc mà các thanh niên chơi xe Việt Nam hay làm - ĐỘ XE. Từ một chiếc Cup 50, qua bàn tay của các phù thủy, chúng có thể kéo lên tới 100km/h chẳng thua gì các xe phân khối lớn cả. Đối với server của ta cũng vậy, yếu cái gì, cường hóa cái đó. RAM ít ư, thì thêm RAM; ổ cứng HDD chậm ư, thay luôn SSD; CPU 2 nhân, gấp đôi thành 4 nhân cho mạnh,... Việc mà ta đang làm gọi là Vertical Scalling hay Scalling up. Lợi ích của Vertical Scalling chính là:\n Ít tốn chi phí so với việc mua thêm máy Chúng ta không phải thay đổi kiến trúc code của trang web Không cần phải xử lý việc giao tiếp phức tạp nếu có nhiều máy  Hay thật, nếu vậy ta chỉ cần cứ thế mà độ server. Nhưng mà không bạn ơi, cái gì cũng có giới hạn, một chiêc cup không thê nâng cấp thành siêu xe được. Mỗi cái máy đều có nhưng ngưỡng (threshold) nhất định. Chẳng hạn ta thêm RAM vượt quá số cổng mà mainboard có được, tương tư như CPU cũng cần độ tương thích nhất định,... Đây là lúc ta cần Horizontal Scalling - mở rộng chiều ngang.     Lúc này, khi một cái server của ta không còn khả năng nâng cấp thêm nữa, việc lắp đặt thêm 1 cái server nữa là cần thiết. Việc thiết lập thêm server như thế nào cũng cần phải xem xét hợp lý. Cách đơn giản nhất chính là tách biệt phần database thành một server riêng biệt. Việc này giúp ta không phải tái kiến trúc code nhiều, đồng thơi lúc này ta có thể scale up từng server riêng biệt mà không phải lo về cái còn lại. Thứ gây phiên ở đây chính là việc giao tiếp, trao đổi thông tin của 2 server sẽ tạo ra một độ trễ nhất định. Tuy nhiên, khoảng thời gian này không đáng là gì so với thời gian mà nó rút ngắn được so với 1 server.\nGiai đoạn 3: 500 ~ 2000 user Dần dần, khi trang web ta phổ biến hơn, lượng user truy cập nhiều hơn và hệ thống ta phải tiếp tục scale thêm. Bây giờ thay vì 1 app server, ta lại lắp thêm 1 cái nữa, rồi 2, 3 tiếp tục như vậy. Lúc này ta cần có sự điều phối sao cho hợp lý, với user này, request này, server nào sẽ xử lý? Đó là lúc ta cần đến Load Balancing.\nÝ tưởng việc này là cần một *Load Balancer* đóng vai trò như một bác công an giao thông vậy. Load Balancer này sẽ tiếp nhận những request của user, từ đó xác định đâu là server gần, phù hợp để xử lý request đó. Ưu điểm của load balancing là giúp điều hương request tốt hơn; khi một server gặp xự cố, load balancer có thể điều hướng request tới một server khác. Load Balancing cũng giúp tăng cường an ninh cho hệ thống. Ví dụ tránh được các tấn công như DDoS. Giai đoạn 4: 2000 ~ 5000 user Đến giai đoạn này, hệ thống của ta đã khá lớn, cả về mặt app server lẫn người dùng. Tuy nhiên vẫn còn một điểm ta có thể tiếp tục cải thiện - Database Server. Hiện tại, mọi truy vấn đều do một server xử lý, và với rất nhiều data cần truy vấn nhân thêm với số user cùng truy vấn như thế thì liệu tốc độ có còn được đảm bảo, thậm chí chuyện gì sẽ xảy ra nếu server này không thể xử lý được hay gặp trục trặc? Chắc chắn cả hệ thống của ta cũng sập theo. Chính ví thể ta cần nhiều server để xử lý database hơn. Một phương pháp được áp dụng để giải quyết vấn đề trên là Database Replication.\n    Hiểu đơn giản, đó là ta tạo nhiều bản sao data trên nhiều máy server khác nhau. Nhờ vậy việc truy xuất thông tin được phân phối đều hơn, thay vì dồn hết lên một Database Server duy nhất. Có nhiều phương pháp được áp dung: Multi-Master Replication, Master-Slave Replication,...\nĐối với Master-Slave Replication, ý tưởng của nó như sau: sẽ có một DB Server được chọn làm Master, tất cả request đọc/ghi server này đều thực hiện. Trong khi đó Slave Server chỉ đảm nhiệm việc đọc dữ liệu mà thôi. Ý tưởng này xuất phát từ thực tế đơn giản - đó là trang web của ta cần đọc dữ liệu nhiều hơn là thêm dữ liệu mới. Cách làm này có một số ưu điểm như:  Ta có thể xử lý nhiều truy vấn hơn Có nhiều backup, tăng độ an toàn hơn Nếu Master server gặp xử cố, việc chọn môt Slave Server thay thế khá đơn giản  Giai đoạn 5: 10000 user Đây là cột mốc mà bài toán ta hướng đến. Lúc này, chúng ta đã setup hệ thống với nhiều app server, nhiều database server, có load balancer,...Tuy nhiên, cách xử lý của ta vẫn còn chưa tối ưu. Đó là sẽ có những request đã được user A thực hiện, một thời gian sau user A là tiếp tục request như vậy. Cách ta cài đặt ở đây đó là load balancer tìm một server để xử lý -\u0026gt; server này lại tìm một DB server -\u0026gt; DB server lại truy xuất trong một lương lớn data -\u0026gt; trả kết quả về...Thật là mất công, trong khi các bước trên đã từng được thực hiện trước đó, nếu ta có thể lưu kết quả ở đâu đó, để rồi khi có một truy vấn tương tự, ta chỉ việc lấy kết quả đã lưu và trả về. Thật nhanh gọn. Ý tưởng trên chính là kỹ thuật Catching. Ý tưởng nghe đơn giản nhưng hiệu quả vô cùng lớn. Ta sẽ tiết kiệm rất nhiều thời gian thay vị làm một loạt các xử lý.\n    → Như vậy, với khá nhiều lần cải tiến, hệ thống của ta lúc này đã được scale khá tốt 😄. Tuy nhiên, thực tế hệ thông của ta vẫn còn có thể làm tốt hơn nữa\nGiai đoạn 6: trên 10k user  Lúc này ta có thể xây dựng hệ thống mạng CDN (Content Delivery Network). Nó giúp ta có nhiều nơi để lưu trữ tài nguyên, nhưng data được catch lại. Để hình dung dễ hơn, lấy hệ thông KFC toàn cầu làm ví dụ. Thay vị miếng gà được giao từ tận trụ sở chính ở Mỹ, ta có thể nhận hàng từ những của hàng KFC gần mình nhất tại Việt Nam. Một kĩ thuật khác là dùng Stateless Architecture: mỗi lần user request, load balancer phải tìm kiếm app server, rồi db server để xử lý. Khá là cồng kềnh vì thế nào cùng một user, cùng một request thì server được định vị sẽ giống nhau. Ta có thể ghi nhận lại việc này để tái sử dụng lần sau. Những dữ liệu kiểu này thường là lưu thông tin các session và chúng thường không có các thuộc tính, quan hệ rõ ràng. Vì vậy ta sẽ dùng NoSQL để lưu trữ. Như vậy, mỗi request ta chỉ cần xác định có thông tin server sẽ xử lý trước đó chưa mà lấy ra dùng lại. Một phương pháp khác đó là chia nhỏ database - Database Partition: nhưng data cùng loại sẽ được tách thành nhưng bảng khác nhau, lưu ở những server khác nhau. Nhờ vậy hạn chế việc truy xuất nhưng thông tin không cần thiết trên một tập dữ liệu lớn.      Tóm tắt Vừa rồi cũng là những thông tin mà mình tìm hiểu được. Tóm gọn lại để một hệ thống có thể scale tốt hơn, ta có thể áp dụng các phương pháp:\n Vertical Scalling và Horizontal Scalling Load Balancing Database Replication Catching Áp dụng mạng CDNs Lưu trữ Session với Stateless Architecture Database Partioning  Hi vọng bài viết sẽ giúp ích cho các bạn 💕\n","link":"https://thientoan0101.github.io/tech/scalling-system/","section":"tech","tags":["tech","vng","zalopay"],"title":"Scalling System via newbie's vision"},{"body":"","link":"https://thientoan0101.github.io/tags/","section":"tags","tags":null,"title":"Tags"},{"body":"","link":"https://thientoan0101.github.io/tags/tech/","section":"tags","tags":null,"title":"tech"},{"body":"","link":"https://thientoan0101.github.io/categories/tech/","section":"categories","tags":null,"title":"tech"},{"body":"","link":"https://thientoan0101.github.io/tech/","section":"tech","tags":["index"],"title":"Technology"},{"body":"","link":"https://thientoan0101.github.io/tags/vng/","section":"tags","tags":null,"title":"vng"},{"body":"","link":"https://thientoan0101.github.io/tags/zalopay/","section":"tags","tags":null,"title":"zalopay"},{"body":"","link":"https://thientoan0101.github.io/tags/book/","section":"tags","tags":null,"title":"book"},{"body":"","link":"https://thientoan0101.github.io/categories/book/","section":"categories","tags":null,"title":"book"},{"body":"","link":"https://thientoan0101.github.io/book/","section":"book","tags":["index"],"title":"Books"},{"body":"Tủ sách của tôi Chào mọi người, hôm nay mình muốn khoe với các bạn tủ sách của mình.\n","link":"https://thientoan0101.github.io/history/histo1/","section":"history","tags":["life","book"],"title":"Histo1"},{"body":"","link":"https://thientoan0101.github.io/history/","section":"history","tags":["index"],"title":"History"},{"body":"","link":"https://thientoan0101.github.io/tags/life/","section":"tags","tags":null,"title":"life"},{"body":"","link":"https://thientoan0101.github.io/categories/life/","section":"categories","tags":null,"title":"life"},{"body":"Tủ sách của tôi Chào mọi người, hôm nay mình muốn khoe với các bạn tủ sách của mình.\n    Mình thích đọc các thể loại tiểu thuyết kinh điển như Hai số phận, Không gia đình, Bố già,...Tuy nhiên thể loại sách mình thích nhất vẫn là các sách về lịch sử. Mình thích tìm hiểu Việt Nam, Trung Quốc và thế giới trước và sau 2 cuộc thế chiến. Ở trong tủ sách các bạn có thể thấy một vài cuốn như Việt Nam Sử Lược, Giai thoại lịch sử Việt Nam, Sự trỗi dậy và suy tàn của đế chế thứ ba,...\nNgoài ra mình cũng có đọc thêm các loại sách về kinh tế, phát triển bản thân. Một trong số đó là chính là quyển sách mình thích thất - Cà phê cùng Tony của tác giả Tony Buổi Sáng.\nĐây là một quyển sách mà theo cá nhân mình, đây là quyển sách có thể thay đổi một thế hệ. Nó không giống như các quyển sách self help thông thường. Văn phong của tác giả rất bình dân, chỉ là tập hợp những bài viết ngắn nhưng tác động của nó lại rất mạnh. Nó giúp ta có cái nhìn tốt hơn, hào sảng hơn, giảm bớt những suy nghĩ tiểu nông mà đa phần người Việt thường có. Ngoài cuốn Cà phê cùng Tony, tác giả còn một cuốn Trên Đường Băng cũng hay không kém. Mình được đọc cuốn Cà phê hồi lớp 8, lúc đó là mượn của chị họ. Nhưng tác động của họ lớn đến nối sau khi đọc xong, mình phải mua một quyển để giữ mà đọc. Và từ đó đến nay, mỗi năm mình đều đọc lại vài lần, mỗi lần đều có những cảm nhận sâu sắc hơn và càng thấm thía tư tưởng của Tony.\nMình thấy một bài thơ của tác giả trong cuốn Trên đường băng rất hay, mình xin viết ra dưới đây. Mời các bạn cùng đọc và suy ngẫm nhé:\n  Cứ mãi ở ao làng, rồi ao sẽ cạn Sao không ra sông, ra biển mà vẫy vùng? Sao cứ trói mình trong nếp nghĩ bùng nhùng? Sao cứ mãi online rồi thở dài ngao ngán? Sao cứ để tuổi trẻ trôi qua thật chán? ... Trên đường băng sân bay, mỗi đời người. Có những kẻ đang chạy đà và cất cánh ","link":"https://thientoan0101.github.io/book/my-books/","section":"book","tags":["life","book"],"title":"My Books"},{"body":"Tủ sách của tôi Chào mọi người, hôm nay mình muốn khoe với các bạn tủ sách của mình.\n","link":"https://thientoan0101.github.io/tech/tech1/","section":"tech","tags":["life","book"],"title":"Tech1"},{"body":"","link":"https://thientoan0101.github.io/tags/hcmus/","section":"tags","tags":null,"title":"hcmus"},{"body":"","link":"https://thientoan0101.github.io/post/","section":"post","tags":["index"],"title":"Posts"},{"body":"Thách Thức 2022 - Một kỷ niệm đẹp Chào mọi người, hôm nay mình muốn chia sẻ với mọi người về một cuộc thi mà mình cùng các đồng đội vừa tham gia - Cuộc thi học thuật Thách Thức.\n    Cho những ai chưa biết thì Thách Thức là một cuộc thi học thuật do khoa Công Nghệ Thông Tin trường đại học Khoa Học Tự Nhiên tp.HCM tổ chức. Hiểu đơn giản, đây giống như một sân chơi Olympia phiên bản IT vậy. Team của mình may mắn vượt qua vòng sơ tuyển để vào top 18 đội tham gia vòng bảng.\nBắt đầu phần thị là màn Khởi Động, ở phần chơi này, nhóm sẽ chia là 2 - một nhóm đoán từ và một nhóm gợi ý. Đây cũng là phần mà nhóm mình tự tin tuy nhiên kết quả lại không được như ý lắm 😟\nPhần thi thứ hai là Nối mạng toàn cầu, nhiệm vụ của nhóm là phải truyền tin và giải mã một thông tiệp được hóa. Tuy là phần nhóm e ngại, nhưng tụi mình lại dành được nhiều điểm nhất trong 3 đội, không uổng công mấy anh em đi luyện tới chiều tối mấy hôm liền 😆\nHai phần thi cuối là Lập trình tiếp sức và Đối đầu trực tiếp. Các đội sẽ có vài phút để giải một bài toán và trả lời các câu hỏi. Tuy nhóm đã cố gắng nhưng mà đối đầu với 2 đội đều đến từ lớp tài năng k19 thật sự không dễ tí nào. Mỗi lần nhóm lên được điểm thì gần như sẽ bị 2 đội bạn đè cướp điểm lại và cuối cùng đành nhìn đội bạn chiến thắng 😥\n \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Nhìn lại Tuy không dành chiến thắng nhưng được trải nghiệm sân chơi Thách Thức là một điều vinh dự với bất cứ sinh viên HCMUS nào. Mình xin cám ơn đến những đồng đội của mình là Đông Ba, Tú Văn, Văn Duy, Văn Đông, những ngày ra công viện luyện đề, họp zoom,... sẽ luôn là những kỉ niệp đẹp nhất thời sinh viên của mình. Thôi thì biết đâu năm sau anh em ta lại chiến tiếp 😂\n    ","link":"https://thientoan0101.github.io/post/thach-thuc-2022/","section":"post","tags":["life","hcmus"],"title":"Thach Thuc - a beautiful memory"},{"body":"Welcome to my blog Hello everyone and welcome to my blog. I'm Thien Toan, a software engineering student in Ho Chi Minh University of Science.\n    I'm interested in iOS software delelopment, software architecture and algorithm. In my free time, I like to participating online competitive contest or learning something new. I also love reading book about classic novel, history, physics and philosophy. Last month (04/2022), I started my first position at a Software Development Fresher at ZaloPay - a biggest fintech product leading Vietnamese e-wallet for e-commerce - and I'm very happy to share this.\nAbout this blog I love to share and guide other people to learn something new. In the future, I would like to become a mentor in technology field. And for now, this blog is a place that I want to share what I know or I love about technology, history and books or... whatever about my life or my feeling. I hope you will find something interesting in this blog. Enjoy reading ♥️ Contact If you want to contact me, you can find me via:\n Facebook: https://www.facebook.com/thientoan.nguyentran/ Linkedin: https://www.linkedin.com/in/thientoan0101/  Moreover, you can use the social network icons on the top right of the page.\n","link":"https://thientoan0101.github.io/about/","section":"","tags":null,"title":"About Me"},{"body":"Welcome to my blog Chào mọi người, mình là Thiện Toàn - sinh viên khoa Công Nghệ Thông Tin trường Đại học Khoa Học Tự Nhiên tp.Hồ Chí Minh.\n    Sau bao nhiêu lần lên ý tưởng rồi trì hoãn, nay mình đã được tiếp một động lực lớn để tạo trang blog này. Chuyện là mình vừa đậu vào chương trình VNG Tech Fresher và được vào team ZaloPay. Trong quá trình training, anh mentor của mình nói là tụi mình nên tập viết blog cá nhân và thế là...trang blog này được ra đời. Đây sẽ là nơi mình muốn chia sẻ những chuyện thường ngày của mình, những điều mình biết, mình thích như sách, lịch sử và những kiến thức công nghệ mình học được.\nHi vọng mọi người sẽ tìm được những điều thú vị trên blog của mình 🥰\n","link":"https://thientoan0101.github.io/post/first-time/","section":"post","tags":["life","vng","zalopay"],"title":"There's always the first time"},{"body":"","link":"https://thientoan0101.github.io/categories/vng/","section":"categories","tags":null,"title":"vng"},{"body":"","link":"https://thientoan0101.github.io/tags/hugo/","section":"tags","tags":null,"title":"Hugo"},{"body":"","link":"https://thientoan0101.github.io/series/","section":"series","tags":null,"title":"Series"},{"body":"","link":"https://thientoan0101.github.io/categories/syntax/","section":"categories","tags":null,"title":"syntax"},{"body":"","link":"https://thientoan0101.github.io/series/themes-guide/","section":"series","tags":null,"title":"Themes Guide"},{"body":"Page bundles are an optional way to organize page resources within Hugo.\nYou can opt-in to using page bundles in Hugo Clarity with usePageBundles in your site configuration or in a page's front matter. Read more about usePageBundles.\nWith page bundles, resources for a page or section, like images or attached files, live in the same directory as the content itself rather than in your static directory.\nHugo Clarity supports the use of leaf bundles, which are any directories within the content directory that contain an index.md file. Hugo's documentation gives this example:\n1content 2├── about 3│ ├── index.md 4├── posts 5│ ├── my-post 6│ │ ├── content1.md 7│ │ ├── content2.md 8│ │ ├── image1.jpg 9│ │ ├── image2.png 10│ │ └── index.md 11│ └── my-other-post 12│ └── index.md 13│ 14└── another-section 15├── .. 16└── not-a-leaf-bundle 17├── .. 18└── another-leaf-bundle 19└── index.md  In the above example `content` directory, there are four leaf bundles: about: This leaf bundle is at the root level (directly under content directory) and has only the index.md.\nmy-post: This leaf bundle has the index.md, two other content Markdown files and two image files. image1 is a page resource of my-post and only available in my-post/index.md resources. image2 is a page resource of my-post and only available in my-post/index.md resources.\nmy-other-post: This leaf bundle has only the index.md.\nanother-leaf-bundle: This leaf bundle is nested under couple of directories. This bundle also has only the index.md.\nThe hierarchy depth at which a leaf bundle is created does not matter, as long as it is not inside another leaf bundle.\n Advantages to using page bundles The image below is part of the bundle of this page, and is located at content/post/bundle/building.png. Because it's within this page's bundle, the markup for the image only has to specify the image's filename, building.png.\n    If you ever change the name of the directory in which this Markdown file and the image reside, the reference to the image would not need to be updated.\nIn addition to more cleanly organizing your content and related assets, when using page bundles, Hugo Clarity will automatically generate markup for modern image formats, which are smaller in file size.\nFor instance, when you reference an image like building.png, Hugo Clarity will check to see if the same image (based on filename) exists in WebP, AVIF or JXL formats. If you inspect the image above, you'll see a \u0026lt;source\u0026gt; element for building.webp, because that file is also present. Hugo Clarity will only include the markup if these images exist.\nBrowsers that support these formats and the \u0026lt;picture\u0026gt; element will load them, while browsers that do not will fall-back to the default image. Read more about this process.\nFinally, note that page assets can be further managed and refined within the page's front matter if you wish, and are not limited to images alone.\nDisadvantages to using page bundles Page resources in a bundle are only available to the page with which they are bundled — that means you can't include an image with one page and then reference it from another.\nImages that are being used in multiple places are more appropriate for your Hugo assets directory. Unlike files in the Hugo static directory, files in the assets directory can be run through Hugo Pipes, which includes image processing.\n","link":"https://thientoan0101.github.io/tech/bundle/","section":"tech","tags":["Hugo"],"title":"Using Hugo page bundles"},{"body":"The \u0026quot;Notices\u0026quot; shortcode enables you to call out pieces of information - sidebars, warnings, tips, etc.\nTo create a notice on a page, you can use the notice shortcode.\nYou use the notice shortcode, with the first parameter being one of note, info, tip, and warning. Then add a title for your note in quotes as the second parameter. The inner body of the note can be whatever markdown you want to create.\nThe following shortcode syntax within a markdown doc:\n1{{% notice note \u0026#34;Note\u0026#34; %}} 2This is a standard \u0026#34;note\u0026#34; style. 3{{% /notice %}} will render as:\nNote This is a standard \u0026quot;note\u0026quot; style.\n The other three variants follow.\nInfo Here is the \u0026quot;info\u0026quot; style.\n Tip Here is a \u0026quot;tip\u0026quot; variant of a notice.\n Warning Here is the \u0026quot;warning\u0026quot; flavor of a notice.\n Also note that the content of a notice can contain anything you could put on a normal page - as shown below:\nComplex Notices are Possible! This is a notice that has a lot of various kinds of content in it.\n Here is a bulleted list With more than one bullet  And even more than one level    Code blocks are fine here, too....\n1public void SayHello() 2{ 3Console.WriteLine(\u0026#34;Hello, world!\u0026#34;); 4}   Productivity Booster! If you're using VS Code for your editing, copy the .vscode\\clarity.code-snippets file into a .vscode root folder on your repo. This will enable you to type note then \u0026lt;tab\u0026gt; then choose with up/down arrows which flavor notice you want, then \u0026lt;tab\u0026gt; again to provide a title, then \u0026lt;tab\u0026gt; to add your content!\n    To use the snippet, you need to first enable quickSuggestions for Markdown (one time only):\n Go to Preferences-\u0026gt;Settings then search for quickSuggestions Follow the link to Edit in settings.json Toward the bottom of the file, paste in the following JSON:  1\u0026#34;[markdown]\u0026#34;: { 2\u0026#34;editor.quickSuggestions\u0026#34;: true 3} Close and save the settings.   ","link":"https://thientoan0101.github.io/tech/notices/","section":"tech","tags":null,"title":"Using Notices"},{"body":"","link":"https://thientoan0101.github.io/archives/","section":"","tags":null,"title":""},{"body":"","link":"https://thientoan0101.github.io/tags/css/","section":"tags","tags":null,"title":"css"},{"body":"","link":"https://thientoan0101.github.io/tags/destacado/","section":"tags","tags":null,"title":"destacado"},{"body":"","link":"https://thientoan0101.github.io/tags/featured/","section":"tags","tags":null,"title":"featured"},{"body":"Este artigo oferece um exemplo básico de uma tradução em Português. O restante conteúdo não foi traduzido.\nArtigo original: https://thientoan0101.github.io/tech/markdown-syntax/\nThis article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nImages Local image, alt text as caption The following image is located within the Hugo site. Because it has alt text but no title text, the caption is generated by the alt text.\n    Remote image, specified caption The following image is loaded from a remote URL. The alt text is the same (for screen readers and in cases when the image doesn't load) but because a separate title is provided, the title is used for the caption:\n  This is Jane Doe  Image with alt text and no caption Alt text is always recommended for SEO, accessibility and in cases when images don't load. However, you don't necessarily always want an image to have a caption. In that case, use a title with one space:\n    Blockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don't communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren't part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Italics Bold Code     italics bold code    Code Blocks Code block with backticks 1\u0026lt;!doctype html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3\u0026lt;head\u0026gt; 4\u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; 5\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; 6\u0026lt;/head\u0026gt; 7\u0026lt;body\u0026gt; 8\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; 9\u0026lt;/body\u0026gt; 10\u0026lt;!-- this line is extraneous 2Error from server (Forbidden): deployments.apps is forbidden: User \u0026#34;chiptest\u0026#34; cannot create resource \u0026#34;deployments\u0026#34; in API group \u0026#34;apps\u0026#34; in the namespace \u0026#34;default\u0026#34; --\u0026gt; 11\u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo's internal highlight shortcode 1\u0026lt;!doctype html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3\u0026lt;head\u0026gt; 4\u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; 5\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; 6\u0026lt;/head\u0026gt; 7\u0026lt;body\u0026gt; 8\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; 9\u0026lt;/body\u0026gt; 10\u0026lt;/html\u0026gt; List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Fruit  Apple Orange Banana   Dairy  Milk Cheese    Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike's talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n  ","link":"https://thientoan0101.github.io/tech/markdown-syntax.pt/","section":"tech","tags":["markdown","css","html","temas","destacado"],"title":"Guia de Sintaxe Markdown"},{"body":"","link":"https://thientoan0101.github.io/series/guia-de-temas/","section":"series","tags":null,"title":"Guia de Temas"},{"body":"","link":"https://thientoan0101.github.io/tags/html/","section":"tags","tags":null,"title":"html"},{"body":"","link":"https://thientoan0101.github.io/tags/markdown/","section":"tags","tags":null,"title":"markdown"},{"body":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nImages Local image, alt text as caption The following image is located within the Hugo site. Because it has alt text but no title text, the caption is generated by the alt text.\n    Remote image, specified caption The following image is loaded from a remote URL. The alt text is the same (for screen readers and in cases when the image doesn't load) but because a separate title is provided, the title is used for the caption:\n  This is Jane Doe  Image with alt text and no caption Alt text is always recommended for SEO, accessibility and in cases when images don't load. However, you don't necessarily always want an image to have a caption. In that case, use a title with one space:\n    Blockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don't communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren't part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Italics Bold Code     italics bold code    Code Blocks Code block with backticks 1\u0026lt;!doctype html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3\u0026lt;head\u0026gt; 4\u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; 5\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; 6\u0026lt;/head\u0026gt; 7\u0026lt;body\u0026gt; 8\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; 9\u0026lt;/body\u0026gt; 10\u0026lt;!-- this line is extraneous 2Error from server (Forbidden): deployments.apps is forbidden: User \u0026#34;chiptest\u0026#34; cannot create resource \u0026#34;deployments\u0026#34; in API group \u0026#34;apps\u0026#34; in the namespace \u0026#34;default\u0026#34; --\u0026gt; 11\u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo's internal highlight shortcode 1\u0026lt;!doctype html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3\u0026lt;head\u0026gt; 4\u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; 5\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; 6\u0026lt;/head\u0026gt; 7\u0026lt;body\u0026gt; 8\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; 9\u0026lt;/body\u0026gt; 10\u0026lt;/html\u0026gt; List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Fruit  Apple Orange Banana   Dairy  Milk Cheese    Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike's talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n  ","link":"https://thientoan0101.github.io/tech/markdown-syntax/","section":"tech","tags":["markdown","css","html","themes","featured"],"title":"Markdown Syntax Guide"},{"body":"","link":"https://thientoan0101.github.io/categories/sintaxe/","section":"categories","tags":null,"title":"sintaxe"},{"body":"","link":"https://thientoan0101.github.io/tags/temas/","section":"tags","tags":null,"title":"temas"},{"body":"","link":"https://thientoan0101.github.io/categories/temas/","section":"categories","tags":null,"title":"temas"},{"body":"","link":"https://thientoan0101.github.io/tags/themes/","section":"tags","tags":null,"title":"themes"},{"body":"","link":"https://thientoan0101.github.io/categories/themes/","section":"categories","tags":null,"title":"themes"},{"body":"","link":"https://thientoan0101.github.io/tags/privacy/","section":"tags","tags":null,"title":"privacy"},{"body":"Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\n Instagram Simple Shortcode  YouTube Privacy Enhanced Shortcode    Twitter Simple Shortcode Owl bet you\u0026#39;ll lose this staring contest 🦉 pic.twitter.com/eJh4f2zncC\n\u0026mdash; San Diego Zoo Wildlife Alliance (@sandiegozoo) October 26, 2021  See documentation https://gohugo.io/content-management/shortcodes/#tweet for more details\n Vimeo Simple Shortcode  .__h_video { position: relative; padding-bottom: 56.23%; height: 0; overflow: hidden; width: 100%; background: #000; } .__h_video img { width: 100%; height: auto; color: #000; } .__h_video .play { height: 72px; width: 72px; left: 50%; top: 50%; margin-left: -36px; margin-top: -36px; position: absolute; cursor: pointer; }  ","link":"https://thientoan0101.github.io/tech/rich-content/","section":"tech","tags":["shortcodes","privacy"],"title":"Rich Content"},{"body":"","link":"https://thientoan0101.github.io/tags/shortcodes/","section":"tags","tags":null,"title":"shortcodes"},{"body":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\n Exierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude  Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\n Comas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et  Vagus elidunt \nThe Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","link":"https://thientoan0101.github.io/tech/placeholder-text/","section":"tech","tags":["markdown","text"],"title":"Placeholder Text"},{"body":"","link":"https://thientoan0101.github.io/tags/text/","section":"tags","tags":null,"title":"text"},{"body":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\n Create a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so:  1{{ if or .Params.math .Site.Params.math }} 2{{ partial \u0026#34;math.html\u0026#34; . }} 3{{ end }}  To enable KaTex globally set the parameter math to true in a project's configuration To enable KaTex on a per page basis include the parameter math: true in content files  Note: Use the online reference of Supported TeX Functions\nExamples Block math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","link":"https://thientoan0101.github.io/tech/math-typesetting/","section":"tech","tags":null,"title":"Math Typesetting"},{"body":"","link":"https://thientoan0101.github.io/tags/emoji/","section":"tags","tags":null,"title":"emoji"},{"body":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site's configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 🙈 🙉 🙉 🙊 🙊\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\n N.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1.emoji { 2font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; 3}","link":"https://thientoan0101.github.io/tech/emoji-support/","section":"tech","tags":["emoji"],"title":"Emoji Support"},{"body":"","link":"https://thientoan0101.github.io/tags/index/","section":"tags","tags":null,"title":"index"}]